// mats-lib-test: Testing the Mats API itself (not testing util classes)

dependencies {

    // :: TEST (this is ONLY a test project! No deps for main/java)

    // Need the testing tools, using JUnit
    testImplementation project(":mats-test-junit")
    // Need the Mats JMS Impl
    testImplementation project(":mats-impl-jms")
    // Need the MatsSerializerJson
    testImplementation project(":mats-serial-json")
    // Some test uses the MatsTestBroker directly.
    testImplementation project(':mats-test-broker')
    // JMS API: The test 'Test_InitiationElideJmsCommit' "hack" the JMS API.
    testCompileOnly "$jmsApiDependency"
    // ActiveMQ Client: The test 'ActiveMq_AMQ_8617_LotsOfDlqs' needs the ActiveMQConnectionFactory.
    testImplementation "org.apache.activemq:activemq-client:$activeMqVersion"
    // H2 Database, for the database tests
    testImplementation "com.h2database:h2:$h2Version"
    // Logging
    testImplementation "org.slf4j:log4j-over-slf4j:$slf4jVersion"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"

    // We want the standard logging, which will be auto-installed by being on the classpath. (autoinstalls)
    testImplementation project(':mats-intercept-logging')
    // Also pulling in the metrics, to get a test of it for all types of mats flows. (autoinstalls)
    testImplementation project(':mats-intercept-micrometer')
}